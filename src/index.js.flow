// @flow

declare export opaque type PreactContext<TContext>;

export type PreactElement =
  | null
  | PreactElement
  | string
  | Array<PreactElement>;

export type PreactComponent<TProps> = (props: TProps) => PreactElement;

// htm
declare export function html(Array<string>, ...args: Array<mixed>): PreactElement;
// preact
declare export function render<TProps>(component: PreactComponent<TProps>): void;
declare export function createContext<TContext>(initalContext?: TContext): PreactContext<TContext>;
declare export function createElement<TProps>(
  type: string | PreactComponent<TProps>,
  props: TProps,
  ...children: Array<PreactElement>
): PreactElement;

// preact/hooks
declare export function useState<TState>(initalState: TState): [TState, (newState: TState) => void];
declare export function useEffect(effect: () => (void | () => mixed), dependencies: Array<mixed>): void;
declare export function useReducer<TState, TAction>(
  reducer: (state: TState, action: TAction) => TState,
  initialArg?: TState
): [TState, (action: TAction) => void];
declare export function useRef<TReference>(initalRef?: TReference): { current: TReference };
declare export function useContext<TContext>(PreactContext<TContext>): TContext;
